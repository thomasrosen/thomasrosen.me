{"version":3,"sources":["components/pages/articles.js"],"names":["units","year","month","day","hour","minute","second","rtf","Intl","RelativeTimeFormat","numeric","getRelativeTime","d1","d2","arguments","length","undefined","Date","elapsed","getTime","u","Math","abs","format","round","Articles","_useState","useState","_useState2","_slicedToArray","articles","setArticles","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetch","then","response","json","data","sort","a","b","date","map","article","has_tags","tags","Array","isArray","catch","_jsxs","className","children","_jsx","style","display","flexWrap","gap","target","href","rel","message","gridTemplateColumns","font","Link","to","slug","title","alignItems","tag","disabled","has_audio","filter","Boolean","item","index","React","Fragment","summary"],"mappings":"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","file":"static/js/4.48000235.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport '../../fonts/petrona-v28-latin/index.css'\n\nimport { Link } from 'react-router-dom'\n// import Dot from '../dot.js'\n\nconst units = {\n    year: 24 * 60 * 60 * 1000 * 365,\n    month: (24 * 60 * 60 * 1000 * 365) / 12,\n    day: 24 * 60 * 60 * 1000,\n    hour: 60 * 60 * 1000,\n    minute: 60 * 1000,\n    second: 1000\n};\n\nconst rtf = new Intl.RelativeTimeFormat('en', { numeric: 'auto' });\n\nconst getRelativeTime = (d1, d2 = new Date()) => {\n    const elapsed = d1.getTime() - d2.getTime();\n\n    // \"Math.abs\" accounts for both \"past\" & \"future\" scenarios\n    for (const u in units) {\n        if (Math.abs(elapsed) > units[u] || u === 'second') {\n            return rtf.format(Math.round(elapsed / units[u]), u);\n        }\n    }\n};\n\nexport default function Articles() {\n  const [articles, setArticles] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    fetch('/blog/articles.json')\n      .then(response => response.json())\n      .then(data => {\n        data.articles = data.articles\n          .sort((a, b) => new Date(b.date) - new Date(a.date))\n          .map(article => {\n            article.date = getRelativeTime(new Date(article.date))\n            article.has_tags = !!article.tags && Array.isArray(article.tags) && article.tags.length > 0\n            return article\n          })\n        setArticles(data.articles)\n        setLoading(false)\n      })\n      .catch(error => {\n        setError(error)\n        setLoading(false)\n      })\n  }, [])\n\n  return <div className=\"tab_content\">\n    <h2>Blog</h2>\n\n    <div style={{\n      display: 'inline-flex',\n      flexWrap: 'wrap',\n      gap: '10px',\n    }}>\n      <a target=\"_blank\" href=\"/blog/feed.rss\">\n        <button>RSS-Feed</button>\n      </a>\n\n      <a target=\"_blank\" rel=\"noreferrer\" href=\"https://open.spotify.com/show/4tdSfXGtc96XrdmYR7NlMk\">\n        <button>Listen on Spotify</button>\n      </a>\n    </div>\n\n    <br />\n    <br />\n    <br />\n\n    {loading && <p>Loading articles...</p>}\n    {error && <p>Error loading articles: {error.message}</p>}\n\n    <div className=\"links_grid\" style={{\n      gridTemplateColumns: 'auto'\n    }}>\n      {articles.length > 0 && articles.map(article => <div\n        key={article.slug}\n        className={!!article && article.font === 'serif' ? 'serif_font' : 'sans_serif_font'}\n      >\n        <h3 className=\"big\">\n          <Link to={'/articles/' + article.slug}>\n            {article.title}\n          </Link>\n        </h3>\n        <p><strong style={{\n          display: 'inline-flex',\n          alignItems: 'center',\n          gap: '5px 15px',\n          flexWrap: 'wrap',\n        }}>\n          {\n            [\n              <span>{article.date}</span>,\n              (article.has_tags ? <span className=\"tag_row\">{article.tags.map(tag => <button className=\"small\" disabled key={tag}>{tag}</button>)}</span> : null),\n              (article.has_audio ? <span>ðŸ”Š</span> : null)\n            ]\n            .filter(Boolean)\n            .map((item, index) => <React.Fragment key={index}>{item}</React.Fragment>)\n          }\n        </strong></p>\n        <p>{article.summary}</p>\n      </div>)}\n    </div>\n\n  </div>\n}\n\n/*\nexport function Article() {\n  const [article, setArticle] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    // fetch the article from /blog/articles/{slug}.json\n    fetch('/blog/articles/' + window.location.pathname.split('/').pop() + '.json')\n      .then(response => response.json())\n      .then(data => {\n        data.article.date = getRelativeTime(new Date(data.article.date))\n\n        setArticle(data.article)\n        setLoading(false)\n      })\n      .catch(error => {\n        setError(error)\n        setLoading(false)\n      })\n  }, [])\n\n  return <div className={`tab_content article ${!!article && article.font === 'serif' ? 'serif_font' : 'sans_serif_font' }`}>\n    {loading && <p>Loading article...</p>}\n    {error && <p>Error loading article: {error.message}</p>}\n\n    {\n      !!article\n        ? <>\n          <h2>{article.title}</h2>\n          <p><strong>\n            {article.date} â€”Â <span className=\"tag_row\">{article.tags.map(tag => <button className=\"small\" disabled key={tag}>{tag}</button>)}</span>\n          </strong></p>\n          <div dangerouslySetInnerHTML={{ __html: article.html }} />\n          <Dot />\n        </>\n        : null\n    }\n  </div>\n}\n*/\n"],"sourceRoot":""}