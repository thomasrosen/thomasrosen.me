{"version":3,"sources":["components/pages/article.js"],"names":["units","year","month","day","hour","minute","second","rtf","Intl","RelativeTimeFormat","numeric","Article","useState","article","setArticle","loading","setLoading","error","setError","useEffect","fetch","window","location","pathname","split","pop","then","response","json","data","date","d1","d2","Date","elapsed","getTime","u","Math","abs","format","round","getRelativeTime","catch","className","font","message","title","tags","map","tag","disabled","dangerouslySetInnerHTML","__html","html"],"mappings":"uNAOMA,EAAQ,CACZC,KAAM,QACNC,MAAQ,OACRC,IAAK,MACLC,KAAM,KACNC,OAAQ,IACRC,OAAQ,KAGJC,EAAM,IAAIC,KAAKC,mBAAmB,KAAM,CAAEC,QAAS,SAa1C,SAASC,IAAW,IAAD,EACFC,mBAAS,MADP,mBACzBC,EADyB,KAChBC,EADgB,OAEFF,oBAAS,GAFP,mBAEzBG,EAFyB,KAEhBC,EAFgB,OAGNJ,mBAAS,MAHH,mBAGzBK,EAHyB,KAGlBC,EAHkB,KAqBhC,OAhBAC,qBAAU,WAERC,MAAM,kBAAoBC,OAAOC,SAASC,SAASC,MAAM,KAAKC,MAAQ,SACnEC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJA,EAAKhB,QAAQiB,KArBG,SAACC,GAAyB,IAArBC,EAAoB,uDAAf,IAAIC,KAC9BC,EAAUH,EAAGI,UAAYH,EAAGG,UAGlC,IAAK,IAAMC,KAAKpC,EACd,GAAIqC,KAAKC,IAAIJ,GAAWlC,EAAMoC,IAAY,WAANA,EAClC,OAAO7B,EAAIgC,OAAOF,KAAKG,MAAMN,EAAUlC,EAAMoC,IAAKA,GAe5BK,CAAgB,IAAIR,KAAKJ,EAAKhB,QAAQiB,OAE1DhB,EAAWe,EAAKhB,SAChBG,GAAW,MAEZ0B,OAAM,SAAAzB,GACLC,EAASD,GACTD,GAAW,QAEd,IAEI,sBAAK2B,UAAS,8BAA2B9B,GAA4B,UAAjBA,EAAQ+B,KAAmB,aAAe,mBAA9F,UACJ7B,GAAW,mDACXE,GAAS,wDAA2BA,EAAM4B,WAGvChC,EACE,qCACA,6BAAKA,EAAQiC,QACb,4BAAG,mCACAjC,EAAQiB,KADR,cACgB,sBAAMa,UAAU,UAAhB,SAA2B9B,EAAQkC,KAAKC,KAAI,SAAAC,GAAG,OAAI,wBAAQN,UAAU,QAAQO,UAAQ,EAAlC,SAA8CD,GAANA,aAE9G,qBAAKE,wBAAyB,CAAEC,OAAQvC,EAAQwC,QAChD,cAAC,IAAD,OAEA","file":"static/js/3.b1095a5c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport '../../fonts/petrona-v28-latin/index.css'\n\n// import { Link } from 'react-router-dom'\nimport Dot from '../dot.js'\n\nconst units = {\n  year: 24 * 60 * 60 * 1000 * 365,\n  month: (24 * 60 * 60 * 1000 * 365) / 12,\n  day: 24 * 60 * 60 * 1000,\n  hour: 60 * 60 * 1000,\n  minute: 60 * 1000,\n  second: 1000\n};\n\nconst rtf = new Intl.RelativeTimeFormat('en', { numeric: 'auto' });\n\nconst getRelativeTime = (d1, d2 = new Date()) => {\n  const elapsed = d1.getTime() - d2.getTime();\n\n  // \"Math.abs\" accounts for both \"past\" & \"future\" scenarios\n  for (const u in units) {\n    if (Math.abs(elapsed) > units[u] || u === 'second') {\n      return rtf.format(Math.round(elapsed / units[u]), u);\n    }\n  }\n};\n\nexport default function Article() {\n  const [article, setArticle] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    // fetch the article from /blog/articles/{slug}.json\n    fetch('/blog/articles/' + window.location.pathname.split('/').pop() + '.json')\n      .then(response => response.json())\n      .then(data => {\n        data.article.date = getRelativeTime(new Date(data.article.date))\n\n        setArticle(data.article)\n        setLoading(false)\n      })\n      .catch(error => {\n        setError(error)\n        setLoading(false)\n      })\n  }, [])\n\n  return <div className={`tab_content article ${!!article && article.font === 'serif' ? 'serif_font' : 'sans_serif_font'}`}>\n    {loading && <p>Loading article...</p>}\n    {error && <p>Error loading article: {error.message}</p>}\n\n    {\n      !!article\n        ? <>\n          <h2>{article.title}</h2>\n          <p><strong>\n            {article.date} — <span className=\"tag_row\">{article.tags.map(tag => <button className=\"small\" disabled key={tag}>{tag}</button>)}</span>\n          </strong></p>\n          <div dangerouslySetInnerHTML={{ __html: article.html }} />\n          <Dot />\n        </>\n        : null\n    }\n  </div>\n}\n"],"sourceRoot":""}